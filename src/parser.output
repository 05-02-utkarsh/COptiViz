State 44 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function

    2 function: type IDENTIFIER LPAREN RPAREN compound_stmt

    3 type: KW_INT

    4 stmt_list: stmt
    5          | stmt_list stmt

    6 compound_stmt: LBRACE stmt_list RBRACE

    7 stmt: decl_stmt
    8     | expr SEMICOLON
    9     | if_stmt
   10     | for_stmt
   11     | return_stmt

   12 decl_stmt: KW_INT IDENTIFIER ASSIGN expr SEMICOLON
   13          | KW_INT IDENTIFIER SEMICOLON

   14 simple_stmt: decl_stmt
   15            | expr SEMICOLON

   16 if_stmt: KW_IF LPAREN expr RPAREN compound_stmt

   17 for_stmt: KW_FOR LPAREN simple_stmt expr SEMICOLON expr RPAREN compound_stmt

   18 return_stmt: KW_RETURN expr SEMICOLON

   19 expr: expr PLUS expr
   20     | expr MINUS expr
   21     | expr MUL expr
   22     | expr DIV expr
   23     | expr LT expr
   24     | IDENTIFIER ASSIGN expr
   25     | IDENTIFIER INCR
   26     | IDENTIFIER DECR
   27     | NUMBER
   28     | STRING
   29     | IDENTIFIER
   30     | IDENTIFIER LPAREN RPAREN
   31     | IDENTIFIER LPAREN expr_list RPAREN

   32 expr_list: expr
   33          | expr_list COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER <ival> (258) 27
    IDENTIFIER <str> (259) 2 12 13 24 25 26 29 30 31
    STRING <str> (260) 28
    KW_INT (261) 3 12 13
    KW_IF (262) 16
    KW_FOR (263) 17
    KW_RETURN (264) 18
    LPAREN (265) 2 16 17 30 31
    RPAREN (266) 2 16 17 30 31
    LBRACE (267) 6
    RBRACE (268) 6
    SEMICOLON (269) 8 12 13 15 17 18
    ASSIGN (270) 12 24
    COMMA (271) 33
    PLUS (272) 19
    MINUS (273) 20
    MUL (274) 21
    DIV (275) 22
    LT (276) 23
    INCR (277) 25
    DECR (278) 26


Nonterminals, with rules where they appear

    $accept (24)
        on left: 0
    program <node> (25)
        on left: 1
        on right: 0
    function <node> (26)
        on left: 2
        on right: 1
    type <node> (27)
        on left: 3
        on right: 2
    stmt_list <node> (28)
        on left: 4 5
        on right: 5 6
    compound_stmt <node> (29)
        on left: 6
        on right: 2 16 17
    stmt <node> (30)
        on left: 7 8 9 10 11
        on right: 4 5
    decl_stmt <node> (31)
        on left: 12 13
        on right: 7 14
    simple_stmt <node> (32)
        on left: 14 15
        on right: 17
    if_stmt <node> (33)
        on left: 16
        on right: 9
    for_stmt <node> (34)
        on left: 17
        on right: 10
    return_stmt <node> (35)
        on left: 18
        on right: 11
    expr <node> (36)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 8 12 15 16 17 18 19 20 21 22 23 24 32 33
    expr_list <node> (37)
        on left: 32 33
        on right: 31 33


State 0

    0 $accept: • program $end

    KW_INT  shift, and go to state 1

    program   go to state 2
    function  go to state 3
    type      go to state 4


State 1

    3 type: KW_INT •

    $default  reduce using rule 3 (type)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: function •

    $default  reduce using rule 1 (program)


State 4

    2 function: type • IDENTIFIER LPAREN RPAREN compound_stmt

    IDENTIFIER  shift, and go to state 6


State 5

    0 $accept: program $end •

    $default  accept


State 6

    2 function: type IDENTIFIER • LPAREN RPAREN compound_stmt

    LPAREN  shift, and go to state 7


State 7

    2 function: type IDENTIFIER LPAREN • RPAREN compound_stmt

    RPAREN  shift, and go to state 8


State 8

    2 function: type IDENTIFIER LPAREN RPAREN • compound_stmt

    LBRACE  shift, and go to state 9

    compound_stmt  go to state 10


State 9

    6 compound_stmt: LBRACE • stmt_list RBRACE

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13
    KW_INT      shift, and go to state 14
    KW_IF       shift, and go to state 15
    KW_FOR      shift, and go to state 16
    KW_RETURN   shift, and go to state 17

    stmt_list    go to state 18
    stmt         go to state 19
    decl_stmt    go to state 20
    if_stmt      go to state 21
    for_stmt     go to state 22
    return_stmt  go to state 23
    expr         go to state 24


State 10

    2 function: type IDENTIFIER LPAREN RPAREN compound_stmt •

    $default  reduce using rule 2 (function)


State 11

   27 expr: NUMBER •

    $default  reduce using rule 27 (expr)


State 12

   24 expr: IDENTIFIER • ASSIGN expr
   25     | IDENTIFIER • INCR
   26     | IDENTIFIER • DECR
   29     | IDENTIFIER •
   30     | IDENTIFIER • LPAREN RPAREN
   31     | IDENTIFIER • LPAREN expr_list RPAREN

    LPAREN  shift, and go to state 25
    ASSIGN  shift, and go to state 26
    INCR    shift, and go to state 27
    DECR    shift, and go to state 28

    $default  reduce using rule 29 (expr)


State 13

   28 expr: STRING •

    $default  reduce using rule 28 (expr)


State 14

   12 decl_stmt: KW_INT • IDENTIFIER ASSIGN expr SEMICOLON
   13          | KW_INT • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 29


State 15

   16 if_stmt: KW_IF • LPAREN expr RPAREN compound_stmt

    LPAREN  shift, and go to state 30


State 16

   17 for_stmt: KW_FOR • LPAREN simple_stmt expr SEMICOLON expr RPAREN compound_stmt

    LPAREN  shift, and go to state 31


State 17

   18 return_stmt: KW_RETURN • expr SEMICOLON

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 32


State 18

    5 stmt_list: stmt_list • stmt
    6 compound_stmt: LBRACE stmt_list • RBRACE

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13
    KW_INT      shift, and go to state 14
    KW_IF       shift, and go to state 15
    KW_FOR      shift, and go to state 16
    KW_RETURN   shift, and go to state 17
    RBRACE      shift, and go to state 33

    stmt         go to state 34
    decl_stmt    go to state 20
    if_stmt      go to state 21
    for_stmt     go to state 22
    return_stmt  go to state 23
    expr         go to state 24


State 19

    4 stmt_list: stmt •

    $default  reduce using rule 4 (stmt_list)


State 20

    7 stmt: decl_stmt •

    $default  reduce using rule 7 (stmt)


State 21

    9 stmt: if_stmt •

    $default  reduce using rule 9 (stmt)


State 22

   10 stmt: for_stmt •

    $default  reduce using rule 10 (stmt)


State 23

   11 stmt: return_stmt •

    $default  reduce using rule 11 (stmt)


State 24

    8 stmt: expr • SEMICOLON
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    SEMICOLON  shift, and go to state 35
    PLUS       shift, and go to state 36
    MINUS      shift, and go to state 37
    MUL        shift, and go to state 38
    DIV        shift, and go to state 39
    LT         shift, and go to state 40


State 25

   30 expr: IDENTIFIER LPAREN • RPAREN
   31     | IDENTIFIER LPAREN • expr_list RPAREN

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13
    RPAREN      shift, and go to state 41

    expr       go to state 42
    expr_list  go to state 43


State 26

   24 expr: IDENTIFIER ASSIGN • expr

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 44


State 27

   25 expr: IDENTIFIER INCR •

    $default  reduce using rule 25 (expr)


State 28

   26 expr: IDENTIFIER DECR •

    $default  reduce using rule 26 (expr)


State 29

   12 decl_stmt: KW_INT IDENTIFIER • ASSIGN expr SEMICOLON
   13          | KW_INT IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 45
    ASSIGN     shift, and go to state 46


State 30

   16 if_stmt: KW_IF LPAREN • expr RPAREN compound_stmt

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 47


State 31

   17 for_stmt: KW_FOR LPAREN • simple_stmt expr SEMICOLON expr RPAREN compound_stmt

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13
    KW_INT      shift, and go to state 14

    decl_stmt    go to state 48
    simple_stmt  go to state 49
    expr         go to state 50


State 32

   18 return_stmt: KW_RETURN expr • SEMICOLON
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    SEMICOLON  shift, and go to state 51
    PLUS       shift, and go to state 36
    MINUS      shift, and go to state 37
    MUL        shift, and go to state 38
    DIV        shift, and go to state 39
    LT         shift, and go to state 40


State 33

    6 compound_stmt: LBRACE stmt_list RBRACE •

    $default  reduce using rule 6 (compound_stmt)


State 34

    5 stmt_list: stmt_list stmt •

    $default  reduce using rule 5 (stmt_list)


State 35

    8 stmt: expr SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 36

   19 expr: expr PLUS • expr

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 52


State 37

   20 expr: expr MINUS • expr

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 53


State 38

   21 expr: expr MUL • expr

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 54


State 39

   22 expr: expr DIV • expr

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 55


State 40

   23 expr: expr LT • expr

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 56


State 41

   30 expr: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 30 (expr)


State 42

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr
   32 expr_list: expr •

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    MUL    shift, and go to state 38
    DIV    shift, and go to state 39
    LT     shift, and go to state 40

    $default  reduce using rule 32 (expr_list)


State 43

   31 expr: IDENTIFIER LPAREN expr_list • RPAREN
   33 expr_list: expr_list • COMMA expr

    RPAREN  shift, and go to state 57
    COMMA   shift, and go to state 58


State 44

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr
   24     | IDENTIFIER ASSIGN expr •

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    MUL    shift, and go to state 38
    DIV    shift, and go to state 39
    LT     shift, and go to state 40

    PLUS      [reduce using rule 24 (expr)]
    MINUS     [reduce using rule 24 (expr)]
    MUL       [reduce using rule 24 (expr)]
    DIV       [reduce using rule 24 (expr)]
    LT        [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 45

   13 decl_stmt: KW_INT IDENTIFIER SEMICOLON •

    $default  reduce using rule 13 (decl_stmt)


State 46

   12 decl_stmt: KW_INT IDENTIFIER ASSIGN • expr SEMICOLON

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 59


State 47

   16 if_stmt: KW_IF LPAREN expr • RPAREN compound_stmt
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    RPAREN  shift, and go to state 60
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    MUL     shift, and go to state 38
    DIV     shift, and go to state 39
    LT      shift, and go to state 40


State 48

   14 simple_stmt: decl_stmt •

    $default  reduce using rule 14 (simple_stmt)


State 49

   17 for_stmt: KW_FOR LPAREN simple_stmt • expr SEMICOLON expr RPAREN compound_stmt

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 61


State 50

   15 simple_stmt: expr • SEMICOLON
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    SEMICOLON  shift, and go to state 62
    PLUS       shift, and go to state 36
    MINUS      shift, and go to state 37
    MUL        shift, and go to state 38
    DIV        shift, and go to state 39
    LT         shift, and go to state 40


State 51

   18 return_stmt: KW_RETURN expr SEMICOLON •

    $default  reduce using rule 18 (return_stmt)


State 52

   19 expr: expr • PLUS expr
   19     | expr PLUS expr •
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    MUL  shift, and go to state 38
    DIV  shift, and go to state 39

    $default  reduce using rule 19 (expr)


State 53

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   20     | expr MINUS expr •
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    MUL  shift, and go to state 38
    DIV  shift, and go to state 39

    $default  reduce using rule 20 (expr)


State 54

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   21     | expr MUL expr •
   22     | expr • DIV expr
   23     | expr • LT expr

    $default  reduce using rule 21 (expr)


State 55

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   22     | expr DIV expr •
   23     | expr • LT expr

    $default  reduce using rule 22 (expr)


State 56

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr
   23     | expr LT expr •

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    MUL    shift, and go to state 38
    DIV    shift, and go to state 39

    $default  reduce using rule 23 (expr)


State 57

   31 expr: IDENTIFIER LPAREN expr_list RPAREN •

    $default  reduce using rule 31 (expr)


State 58

   33 expr_list: expr_list COMMA • expr

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 63


State 59

   12 decl_stmt: KW_INT IDENTIFIER ASSIGN expr • SEMICOLON
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    SEMICOLON  shift, and go to state 64
    PLUS       shift, and go to state 36
    MINUS      shift, and go to state 37
    MUL        shift, and go to state 38
    DIV        shift, and go to state 39
    LT         shift, and go to state 40


State 60

   16 if_stmt: KW_IF LPAREN expr RPAREN • compound_stmt

    LBRACE  shift, and go to state 9

    compound_stmt  go to state 65


State 61

   17 for_stmt: KW_FOR LPAREN simple_stmt expr • SEMICOLON expr RPAREN compound_stmt
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 36
    MINUS      shift, and go to state 37
    MUL        shift, and go to state 38
    DIV        shift, and go to state 39
    LT         shift, and go to state 40


State 62

   15 simple_stmt: expr SEMICOLON •

    $default  reduce using rule 15 (simple_stmt)


State 63

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr
   33 expr_list: expr_list COMMA expr •

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    MUL    shift, and go to state 38
    DIV    shift, and go to state 39
    LT     shift, and go to state 40

    $default  reduce using rule 33 (expr_list)


State 64

   12 decl_stmt: KW_INT IDENTIFIER ASSIGN expr SEMICOLON •

    $default  reduce using rule 12 (decl_stmt)


State 65

   16 if_stmt: KW_IF LPAREN expr RPAREN compound_stmt •

    $default  reduce using rule 16 (if_stmt)


State 66

   17 for_stmt: KW_FOR LPAREN simple_stmt expr SEMICOLON • expr RPAREN compound_stmt

    NUMBER      shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    STRING      shift, and go to state 13

    expr  go to state 67


State 67

   17 for_stmt: KW_FOR LPAREN simple_stmt expr SEMICOLON expr • RPAREN compound_stmt
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • LT expr

    RPAREN  shift, and go to state 68
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    MUL     shift, and go to state 38
    DIV     shift, and go to state 39
    LT      shift, and go to state 40


State 68

   17 for_stmt: KW_FOR LPAREN simple_stmt expr SEMICOLON expr RPAREN • compound_stmt

    LBRACE  shift, and go to state 9

    compound_stmt  go to state 69


State 69

   17 for_stmt: KW_FOR LPAREN simple_stmt expr SEMICOLON expr RPAREN compound_stmt •

    $default  reduce using rule 17 (for_stmt)
